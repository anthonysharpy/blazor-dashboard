@namespace blazor_dashboard

@if (State != null)
{
    <div class="navigation">
        <NavItem 
        PageComponentType="typeof(HomePage)"
        ChildContent="Home">
        </NavItem>
        <NavItem 
        PageComponentType="typeof(PlayersPage)"
        ChildContent="Players">
        </NavItem>
        <NavItem
        PageComponentType="typeof(ServersPage)"
        ChildContent="Servers">
        </NavItem>
    </div>
    <div class="history-container">
        @foreach (var historyItem in State.History ?? new())
        {
            <HistoryItem
                ChildContent="@historyItem.PageType?.Name"
                PageStateReference="@historyItem"
                OnMouseLeave="@(() => ClearPagePreview())"
                OnMouseOver="@(() => SetPageBeingPreviewed(historyItem))">
            </HistoryItem>
        }
    </div>

    @if(_pageBeingPreviewed != null && _pageBeingPreviewed != State.ActivePage)
    {
        <div class="history-preview">
            <div class="history-preview-content">
                <DynamicComponent 
                    Type="@_pageBeingPreviewed.PageType"
                    Parameters="@_pageBeingPreviewed.PageParameters">
                </DynamicComponent>
            </div>
        </div>
    }
}

@code {
    [CascadingParameter]
    public SiteState? State { get; set; }

    private PageState? _pageBeingPreviewed { get; set; }

    protected override void OnParametersSet()
    {
        if (State == null)
            throw new Exception("invalid State during OnParametersSet");

        State.SubscribeToStateChange(() => StateHasChanged());
    }

    private void SetPageBeingPreviewed(PageState pageState)
    {
        _pageBeingPreviewed = pageState;
    }

    private void ClearPagePreview()
    {
        _pageBeingPreviewed = null;
    }
}